buildscript {
    ext.local = new Properties()
    if (project.rootProject.file('local.properties').exists()) {
        ext.local.load(project.rootProject.file('local.properties').newDataInputStream())
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.2.61"
    id "com.jfrog.bintray" version "1.8.1"
}

apply plugin: 'maven-publish'

defaultTasks 'clean', 'build'

group 'com.github.vokorm'
version '0.11-SNAPSHOT'

repositories {
    jcenter()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // logging
    compile 'org.slf4j:slf4j-api:1.7.25'

    // db
    compile 'org.sql2o:sql2o:1.5.4'
    compile "com.zaxxer:HikariCP:3.2.0"

    // validation support
    compile 'javax.validation:validation-api:2.0.0.Final'  // so that the BeanFieldGroup will perform JSR303 validations
    testCompile 'org.hibernate.validator:hibernate-validator:6.0.11.Final'
    // EL is required: http://hibernate.org/validator/documentation/getting-started/
    testCompile 'org.glassfish:javax.el:3.0.1-b08'

    // tests
    testCompile("com.github.mvysny.dynatest:dynatest:0.9")
    testCompile 'com.google.code.gson:gson:2.8.5'
    testCompile 'ch.qos.logback:logback-classic:1.2.3'
    testCompile 'com.h2database:h2:1.4.197'

    testCompile 'org.postgresql:postgresql:42.2.1'
    testCompile 'org.zeroturnaround:zt-exec:1.10'
    testCompile 'mysql:mysql-connector-java:5.1.47'
    testCompile 'org.mariadb.jdbc:mariadb-java-client:2.3.0'
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId 'vok-orm'
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'A very simple persistence framework, built on top of Sql2o')
                root.appendNode('name', 'VoK-ORM')
                root.appendNode('url', 'https://github.com/mvysny/vok-orm')
            }
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

bintray {
    user = local.getProperty('bintray.user')
    key = local.getProperty('bintray.key')
    pkg {
        repo = 'github'
        name = 'com.github.vokorm'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/mvysny/vok-orm'
        publish = true
        publications = ['mavenJava']
        version {
            name = project.version
            released = new Date()
        }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        // to see the exceptions of failed tests in Travis-CI console. Seems to be ignored:
        // https://github.com/gradle/gradle/issues/4681
        exceptionFormat = 'full'
    }
}
